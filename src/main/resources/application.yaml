server:
  port: 10000
 
spring:
  application:
    name: member-service
  profiles:
    active: dev
  # MySQL-Server & JPA 설정
  # Quarkus 기반 Keycloak-Server 을 이용한 인증 처리
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://keycloak.inkcloud.click/realms/inkcloud
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
  datasource:   
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://mysql.inkcloud.svc.cluster.local:3306/member_db?serverTimezone=Asia/Seoul&characterEncoding=utf8
    username: root
    password: 1234  
    hikari:
      connection-timeout: 20000
      maximum-pool-size: 10
      initialization-fail-timeout: 0
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:  
        "[format_sql]": true
  # Redis 설정
  data:
    redis:
      host: redis.member-service.svc.cluster.local
      port: 6379
      # password: 필요시 입력
  # SMTP 메일 설정 
  mail:
    host: ${SPRING_MAIL_HOST}
    port: ${SPRING_MAIL_PORT}
    username: ${SPRING_MAIL_USERNAME}
    password: ${SPRING_MAIL_PASSWORD}
    properties:
      mail.smtp.auth: true
      mail.smtp.starttls.enable: true

# 로깅 설정
logging:  
  level:
    root: info
    org.springframework.security: DEBUG
    org.hibernate.SQL: debug
    org.hibernate.orm.jdbc.bind: trace
    com.mzc.member_service: INFO

# Eureka-Server 에 자가 등록 설정
# eureka:
#   instance:
#     instance-id: ${spring.application.name}:${spring.cloud.client.hostname}:${server.port}
#     prefer-ip-address: true
#   client:  
#     register-with-eureka: true  
#     fetch-registry: true
#     service-url:
#       defaultZone: http://localhost:8761/eureka
